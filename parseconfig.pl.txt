#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use Getopt::Long qw(GetOptions);
use Getopt::Long qw(:config no_ignore_case bundling);

my (
    $devicePattern,
    $customer_name,
    @devices,
    $mainDirectory,
    $base_dir,
    $device_count,
    $filtered_list,
    $opt_help,
);
$customer_name = `ls /home/cvs/customers/`;
$customer_name =~ s/\s+$//;
my $device_pattern;
my @device_match;

GetOptions('p|device_pattern=s' => \$device_pattern,
           'l|list'             => \$filtered_list,
           'help|?',
        ) or die "Usage: $0 --device_pattern <pattern>\n";

$base_dir = "/home/cvs/customers/".$customer_name."/Network-Configs/configs/";
$mainDirectory = "ls /home/cvs/customers/".$customer_name."/Network-Configs/configs/";
@devices = `$mainDirectory`;

sub help {
    print "This is helping...\n";
}

if ($opt_help) {
    help();
}
# set the search according to device_pattern entered, if no patter was entred
# then parse the whole directory content
if ($device_pattern) {
    my $configName;
    foreach $configName (@devices) {
        if ($configName =~ /$device_pattern/gi) {
            $configName =~ s/,v$//;
            push(@device_match, $configName);
            $device_count++;
        }
    }
    print "@device_match\n";
    printf "I FOUND: %d DEVICES\n",$device_count;
} else {
    help;
}
if ($filtered_list) {
    my $filename = $customer_name."_filteredList.txt";
    open(FH, '>', $filename) or die "Could not open file '$filename': $!";
    foreach my $config (@device_match) {
        print FH $config;
    }
    close FH;
}

__END__

This is the script help